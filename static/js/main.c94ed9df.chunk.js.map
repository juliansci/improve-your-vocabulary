{"version":3,"sources":["config/index.js","components/App/styled.js","components/Header/styled.js","components/Header/index.js","components/Footer/styled.js","components/Footer/index.js","components/GridWords/styled.js","components/GridWords/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["require","config","module","exports","backendApiUrl","process","AppLayout","styled","div","HeaderLayout","ContentLayout","FooterLayout","HeaderContainer","HeaderTitle","HeaderDescription","Header","nextUpdate","React","useState","counter","setCounter","useEffect","setTimeout","FooterContainer","FooterLinkGithub","a","FooterPersonalInfo","FooterText","FooterSocial","NameItem","SocialItem","Footer","href","target","icon","faGithub","faTwitter","faLinkedin","LoaderContainer","GridWordsContainer","WordContainer","WordTitle","WordPronunciation","colorByFrequency","rare","uncommon","common","frequent","WordFrequency","props","frequency","WordDefinitions","WordDefinition","WordShareSection","WordShareDescription","GridWords","dailyWords","words","sort","b","results","length","map","wordItem","wordFrequency","key","word","pronunciation","result","index","uuid","partOfSpeech","definition","examples","rel","type","color","height","width","App","setDailyWords","fetch","then","response","json","data","setNextUpdate","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c94ed9df.chunk.js","sourcesContent":["require('dotenv').config();\n\nconst config = {\n  backendApiUrl: process.env.REACT_APP_BACKEND_API_URL\n};\n\nmodule.exports = config;","import styled from 'styled-components';\n\nexport const AppLayout = styled.div`\n    display: grid;\n    grid-template-rows: 200px 1fr 50px;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const HeaderLayout = styled.div`\n   grid-row: 1 / 2;\n`;\n\nexport const ContentLayout = styled.div`\n`;\n\nexport const FooterLayout = styled.div`\n   grid-template-rows: 1fr;\n`;\n","import styled from 'styled-components';\n\nexport const HeaderContainer = styled.div`\n   height: 100%;\n   width: 100%;\n   color: white;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   flex-direction: column;\n`\n\nexport const HeaderTitle = styled.div`\n   font-size: 46px;\n   text-align: center;\n   @media (max-width: 768px) {\n      font-size: 32px;\n      padding: 12px 40px;\n   }\n`\n\n\nexport const HeaderDescription = styled.div`\n   font-size: 24px;\n   text-align: center;\n   @media (max-width: 768px) {\n      font-size: 22px;\n      padding: 12px 40px;\n   }\n`","import React from 'react';\nimport { HeaderContainer, HeaderTitle, HeaderDescription } from './styled';\n\nconst Header = ({ nextUpdate }) => {\n  const [counter, setCounter] = React.useState(nextUpdate);\n  React.useEffect(() => {\n    nextUpdate > 0 && !counter && setCounter(nextUpdate);\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n  }, [nextUpdate, counter]);\n\n  return <HeaderContainer>\n    <HeaderTitle>\n      IMPROVE YOUR VOCABULARY DAILY\n       </HeaderTitle>\n    <HeaderDescription>\n      Each day you will learn 12 words which ones you can improve your vocabulary<br /> Seconds for new words: {counter}\n    </HeaderDescription>\n  </HeaderContainer>\n};\n\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const FooterContainer = styled.div`\n   height: 100%;\n   width: 100%;\n   background-color: #0C090A;\n   color: white;\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n`\nexport const FooterLinkGithub = styled.a`\n   font-size: 14px;\n   margin-left: 25px;\n   cursor: pointer;\n   color: white;\n   text-decoration: none;\n   @media (max-width: 768px) {\n      margin-top: 19px;\n      margin-right: 3px;\n   }\n`\nexport const FooterPersonalInfo = styled.div`\n   display: flex;\n`\nexport const FooterText = styled.div`\n   font-size: 14px;\n   margin-right: 20px;\n   font-weight: 700;\n`\nexport const FooterSocial = styled.div`\n   font-size: 14px;\n   margin-right: 20px;\n   color: white;\n`\n\nexport const NameItem = styled.a`\n   color: white;\n   text-decoration: none;\n`\n\nexport const SocialItem = styled.a`\n   color: white;\n   margin-right: 15px;\n   font-size: 18px;\n   cursor: pointer;\n`","import React from 'react';\nimport { FooterContainer, FooterLinkGithub, FooterPersonalInfo, FooterText, FooterSocial, SocialItem, NameItem } from './styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTwitter, faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons'\n\nconst Footer = () => (\n  <FooterContainer>\n    <FooterLinkGithub href=\"https://github.com/juliansci/improve-your-vocabulary\" target=\"_blank\">\n      View on Github <FontAwesomeIcon icon={faGithub} />\n    </FooterLinkGithub>\n    <FooterPersonalInfo>\n      <FooterText>\n        <NameItem href=\"https://julianscialabba.com\" target=\"_blank\">Juli√°n Scialabba</NameItem>\n      </FooterText>\n      <FooterSocial>\n        <SocialItem href=\"http://twitter.com/juliansci\" target=\"_blank\">\n          <FontAwesomeIcon icon={faTwitter} />\n        </SocialItem>\n        <SocialItem href=\"https://www.linkedin.com/in/julianscialabba/\" target=\"_blank\">\n          <FontAwesomeIcon icon={faLinkedin} />\n        </SocialItem>\n        <SocialItem href=\"http://github.com/juliansci\" target=\"_blank\">\n          <FontAwesomeIcon icon={faGithub} />\n        </SocialItem>\n      </FooterSocial>\n    </FooterPersonalInfo>\n  </FooterContainer>\n);\n\nexport default Footer;\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  min-height: 1000px;\n  justify-content: center;\n`\n\nexport const GridWordsContainer = styled.div`\n   display: grid;\n   grid-template-columns:repeat(4, 1fr);\n   grid-column-gap: 20px;\n   grid-row-gap: 20px;\n   @media (max-width: 1120px) {\n      grid-template-columns:repeat(3, 1fr);\n   }\n   @media (max-width: 758px) {\n      grid-template-columns:repeat(2, 1fr);\n   }\n   @media (max-width: 500px) {\n      grid-template-columns:repeat(1, 1fr);\n   }\n   padding: 25px;\n`\n\nexport const WordContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: white;\n  border-radius: 15px;\n  text-align: center;\n  padding: 15px;\n`\n\nexport const WordTitle = styled.div`\n  font-size: 24px;\n`\n\nexport const WordPronunciation = styled.div`\n`\n\nconst colorByFrequency = {\n  rare: '#FD151B',\n  uncommon: '#FFB30F',\n  common: '#01295F',\n  frequent: '#849324'\n}\nexport const WordFrequency = styled.div`\n  background-color: ${props => colorByFrequency[props.frequency]};\n  padding: 2px 10px;\n  color: white;\n  border-radius: 15px;\n  font-size: 14px;\n`\n\nexport const WordDefinitions = styled.div`\n  text-align: left;\n  margin-top: 15px;\n  width: 100%;\n`\n\nexport const WordDefinition = styled.div`\n  margin-bottom: 10px;\n`\n\n\nexport const WordShareSection = styled.div`\n  flex-grow: 1;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  flex-direction: column;\n`\n\nexport const WordShareDescription = styled.div`\n  font-size: 12px;\n  color: #333333;\n`","import React from 'react';\nimport uuid from 'react-uuid';\nimport {\n  LoaderContainer,\n  GridWordsContainer,\n  WordContainer,\n  WordTitle,\n  WordFrequency,\n  WordPronunciation,\n  WordDefinitions,\n  WordDefinition,\n  WordShareSection,\n  WordShareDescription\n} from './styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n\nconst orderWordsByResults = words => {\n  words.sort((a, b) => {\n    if (a.results.length < b.results.length) {\n      return -1;\n    }\n    if (a.results.length > b.results.length) {\n      return 1;\n    }\n    return 0;\n  });\n}\nconst GridWords = ({ dailyWords }) => {\n  orderWordsByResults(dailyWords.words);\n  if (!dailyWords.words.length) {\n    return <LoaderContainer>\n      <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n      />\n    </LoaderContainer>;\n  }\n  return <GridWordsContainer>\n    {dailyWords.words.map(wordItem => {\n      const wordFrequency = wordItem.frequency < 2 ?\n        'rare' :\n        wordItem.frequency >= 2 && wordItem.frequency < 2.7 ? 'uncommon' :\n          wordItem.frequency >= 2.7 && wordItem.frequency < 3.4 ? 'common' :\n            'frequent';\n      return <WordContainer key={wordItem.word}>\n        <WordTitle>{wordItem.word}</WordTitle>\n        <WordFrequency frequency={wordFrequency}>\n          {wordFrequency}\n        </WordFrequency>\n        <WordPronunciation>/{wordItem.pronunciation}/</WordPronunciation>\n        <WordDefinitions>\n          {wordItem.results.map((result, index) => {\n            return <WordDefinition key={uuid()}>\n              {++index}- <strong>({result.partOfSpeech})</strong> {result.definition}.<br />\n              {result.examples &&\n                <>\n                  <strong>Example:</strong> {result.examples}\n                </>\n              }\n            </WordDefinition>\n          })}\n        </WordDefinitions>\n        <WordShareSection>\n          <WordShareDescription>Share an example</WordShareDescription>\n          <a href={`https://twitter.com/share?ref_src=twsrc%5Etfw&text=I learn a new word: ${wordItem.word} - Example => Write a sentence example =)`} target=\"_blank\" rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={faTwitter} />\n          </a>\n        </WordShareSection>\n\n      </WordContainer>\n    })}\n  </GridWordsContainer>;\n}\n\nexport default GridWords;","\nimport React, { useState, useEffect } from 'react';\nimport { AppLayout, HeaderLayout, ContentLayout, FooterLayout } from './styled';\nimport Header from '../Header';\nimport Footer from '../Footer';\nimport GridWords from '../GridWords';\nimport config from '../../config';\n\nconst App = () => {\n  const [dailyWords, setDailyWords] = useState({\n    words: []\n  });\n  useEffect(() => {\n    fetch(config.backendApiUrl)\n      .then(response => response.json())\n      .then(data => setDailyWords(data));\n  }, []);\n  const [nextUpdate, setNextUpdate] = useState(0);\n  useEffect(() => {\n    fetch(`${config.backendApiUrl}next-update`)\n      .then(response => response.json())\n      .then(data => setNextUpdate(data.nextUpdate))\n  }, []);\n  return (\n    <AppLayout>\n      <HeaderLayout >\n        <Header nextUpdate={nextUpdate} />\n      </HeaderLayout>\n      <ContentLayout>\n        <GridWords dailyWords={dailyWords} />\n      </ContentLayout>\n      <FooterLayout>\n        <Footer />\n      </FooterLayout>\n    </AppLayout>\n  );\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}